import asyncio
import webbrowser
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import (
    KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove
)

API_TOKEN = "8410930612:AAFGx_FrZYy-HEtZ-IqDbh_kJ65pZxs5Ass"

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# –•—Ä–∞–Ω–∏–ª–∏—â–µ "–ø–µ—Ä–µ–∫—É—Ä—â–∏–∫–æ–≤"
smokers = []


def show_smokers_on_map(smokers_list):
    """–°–æ–∑–¥–∞—ë—Ç HTML-–∫–∞—Ä—Ç—É —Å –ø–µ—Ä–µ–∫—É—Ä—â–∏–∫–∞–º–∏ –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –µ—ë."""
    if not smokers_list:
        return None

    html_content = f"""
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8" />
        <title>–ö–∞—Ä—Ç–∞ –ø–µ—Ä–µ–∫—É—Ä–æ–≤</title>
        <script src="https://api-maps.yandex.ru/2.1/?lang=ru_RU" type="text/javascript"></script>
        <script type="text/javascript">
            ymaps.ready(init);
            function init() {{
                var map = new ymaps.Map("map", {{
                    center: [{smokers_list[0]['lat']}, {smokers_list[0]['lon']}],
                    zoom: 15
                }});
                {"".join([f"map.geoObjects.add(new ymaps.Placemark([{s['lat']}, {s['lon']}], {{balloonContent: '{s['name']} –Ω–∞ –ø–µ—Ä–µ–∫—É—Ä–µ'}}));" for s in smokers_list])}
            }}
        </script>
        <style>
            html, body, #map {{ width: 100%; height: 100%; margin: 0; padding: 0; }}
        </style>
    </head>
    <body>
        <div id="map"></div>
    </body>
    </html>
    """

    filename = "smokers_map.html"
    with open(filename, "w", encoding="utf-8") as f:
        f.write(html_content)

    webbrowser.open(filename)
    return filename


@dp.message(Command("start"))
async def start_handler(message: types.Message):
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
    button_geo = KeyboardButton(text="üö¨ –í—ã–π—Ç–∏ –Ω–∞ –ø–µ—Ä–µ–∫—É—Ä", request_location=True)
    keyboard = ReplyKeyboardMarkup(
        keyboard=[[button_geo]],
        resize_keyboard=True
    )
    await message.answer(
        "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –Ω–∞ –ø–µ—Ä–µ–∫—É—Ä üö¨",
        reply_markup=keyboard
    )


@dp.message(Command("map"))
async def map_handler(message: types.Message):
    if not smokers:
        await message.answer("–ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –Ω–∞ –ø–µ—Ä–µ–∫—É—Ä–µ üò¢")
    else:
        file = show_smokers_on_map(smokers)
        if file:
            await message.answer("–ö–∞—Ä—Ç–∞ –ø–µ—Ä–µ–∫—É—Ä—â–∏–∫–æ–≤ —Å–æ–∑–¥–∞–Ω–∞! –û—Ç–∫—Ä–æ–π —Ñ–∞–π–ª smokers_map.html —É —Å–µ–±—è.")


@dp.message()
async def location_handler(message: types.Message):
    if message.location:
        lat = message.location.latitude
        lon = message.location.longitude
        smokers.append({"name": message.from_user.first_name, "lat": lat, "lon": lon})
        await message.answer(
            f"–¢—ã –æ—Ç–º–µ—á–µ–Ω –Ω–∞ –ø–µ—Ä–µ–∫—É—Ä–µ! üö¨\n–í—Å–µ–≥–æ —Å–µ–π—á–∞—Å –Ω–∞ –ø–µ—Ä–µ–∫—É—Ä–µ: {len(smokers)}",
            reply_markup=ReplyKeyboardRemove()
        )
    else:
        await message.answer("–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –≤—ã–π—Ç–∏ –Ω–∞ –ø–µ—Ä–µ–∫—É—Ä, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É —Å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–µ–π!")


async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
